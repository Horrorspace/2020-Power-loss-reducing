   P(1) = 0; % активная мощность нагрузки узла [МВт]
   P(2) = 0.1;  
   P(3) = 0.09;
   P(4) = 0.12;
   P(5) = 0.06;
   P(6) = 0.06;
   P(7) = 0.2;
   P(8) = 0.2;
   P(9) = 0.06;
   P(10) = 0.06;
   P(11) = 0.045;
   P(12) = 0.06;
   P(13) = 0.06;
   P(14) = 0.12;
   P(15) = 0.06;
   P(16) = 0.06;
   P(17) = 0.06;
   P(18) = 0.09;
   P(19) = 0.09;
   P(20) = 0.09;
   P(21) = 0.09;
   P(22) = 0.09;
   P(23) = 0.09;
   P(24) = 0.42;
   P(25) = 0.42;
   P(26) = 0.06;
   P(27) = 0.06;
   P(28) = 0.06;
   P(29) = 0.12;
   P(30) = 0.2;
   P(31) = 0.15;
   P(32) = 0.21;
   P(33) = 0.06;
n = 3; % число узлов в которые устанавливается РГ
nvars = 33; % число узлов в сети
lb = zeros(1,33); % создание матрицы ограничений снизу
ub = zeros(1,33); % создание матрицы ограничений сверху
v = zeros (1,33); % создание матрицы значений мощностей РГ
value = zeros(1,n); % создание матрицы решений
k = zeros(1,n); % создание нулевой матрицы узлов в которые устанавливается РГ 
K = zeros(1,33); % создание нулевой матрицы коэффициентов чувствительности
v = zeros(1, 33); % создание нулевой матрицы решений
m = zeros(1,33); % создание нулевой матрицы значений потерь активной мощности
m0 = dP(v); % вычисление исходного значения потерь активной мощности
for (i = 2:33)
    v = zeros(1, 33); % создание нулевой матрицы мощностей РГ
    v(i) = P(i)*0.05; % запись значения мощности РГ на i-й итерации
    m(i) = dP(v); % вычисление потерь активной мощности 
    K(i) = (m0 - m(i))/(P(i)*0.05); % вычисление коэффициентов чувствительности
end
[val, inx] = max(abs(K)); % поиск значения наибольшего коэффициента чувствительности и индекса узла с наибольшим коэффициентом чувствительности
  k(1) = inx; % запись индекса в массив
  ub(k(1)) = P(k(1)); % запись верхней границы
  
  %%%Генетический алгоритм оптимизации:
  %% Start with the default options
options = optimoptions('ga');
%% Modify options setting
options = optimoptions(options,'Display', 'iter');
[x,fval,exitflag,output,population,score] = ...
ga(@(v)dP1(v),nvars,[],[],[],[],lb,ub,[],[],options);
  v = x; % запись решения из генетического алгоритма
  value(1) = v(k(1)); % запись решения в массив

for (i = 2:n);
     K = zeros(1,33); % создание нулевой матрицы коэффициентов чувствительности
m = zeros(1,33);
m0 = dP(v);
for (kk = 2:33)
    variable = v(kk); % сохранение текущего значений мощностей РГ
    v(kk) = P(kk)*0.05; % запись значения мощности РГ на i-й итерации
    m(kk) = dP1(v); %  вычисление потерь активной мощности
    K(kk) = (m0 - m(kk))/(P(kk)*0.05);  % вычисление коэффициентов чувствительности
    v(kk) = variable; % присвоение значений мощностей РГ из переменной
end
[val, inx] = max((K)); % поиск значения наибольшего коэффициента чувствительности и индекса узла с наибольшим коэффициентом чувствительности
for (count = 1:n)
for (m = 1:n)
   if k(m) == inx;
         K(inx) = 0; % присваивание повторяющемуся значению коэффициента чувствительности нулевого значения
         [val, inx] = max((K)); % поиск значения наибольшего коэффициента чувствительности и индекса узла с наибольшим коэффициентом чувствительности
      end
end
end

  k(i) = inx; % запись индекса в массив
  ub(k(i)) = P(k(i)); % запись верхней границы
  
    %%%Генетический алгоритм оптимизации:
  %% Start with the default options
options = optimoptions('ga');
%% Modify options setting
options = optimoptions(options,'Display', 'iter');
[x,fval,exitflag,output,population,score] = ...
ga(@(v)dP1(v),nvars,[],[],[],[],lb,ub,[],[],options);
  v = x;  % запись решения из генетического алгоритма
  value = v; % запись решения в массив
end
k % вывод на экран номеров узлов в которые установленна РГ
value % вывод на экран значений мощности РГ